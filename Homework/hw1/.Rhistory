ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "black")+
geom_abline(intercept = c(0, 0.25), colour = "green")
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "black")+
geom_abline(intercept = c(0, 0.25), colour = "green") +
theme(axis.title.y=element_text(size=rel(1.2),vjust=0.2),
axis.title.x=element_text(size=rel(1.2),vjust=0.2),
axis.text.x=element_text(size=rel(1.3)),
axis.text.y=element_text(size=rel(1.3)),
text = element_text(size=13))
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "black")+
geom_abline(intercept = c(0, 0.25), colour = "green") +
theme(axis.title.y=element_text(size=rel(1.2),vjust=0.2),
axis.title.x=element_text(size=rel(1.2),vjust=0.2),
axis.text.x=element_text(size=rel(1.3)),
axis.text.y=element_text(size=rel(1.3)),
text = element_text(size=13))
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "black")+
geom_abline(intercept = c(0, 0.25), colour = "green")
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = c(0, 0.25), colour = "green")
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = c(0, 0.25), colour = "green") +
geom_abline(intercept = c(0.25, 0), colour = "green")
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = c(0, 0.25), colour = "green") +
geom_abline(intercept = c(0.25, 0), colour = "green")
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = c(0, 0.25), colour = "green") +
geom_abline(intercept = c(0.25, 0), colour = "green")
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = c(0.25, 0), colour = "green")
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = c(0.25, 0), colour = "green")
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green")
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = c(0.25, 0.25), colour = "green") +
```
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = c(0.25, 0.25), colour = "green")
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green")
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green")
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
theme_classic()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
theme_classic() +
geom_ribbon()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
theme_classic() +
geom_ribbon(ymin = x + 0.25, ymax = 1, xmax = 1, xmin = y + 0.25)
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
theme_classic()
ggplot(data.frame(x= c(0,1)), aes(x = x)) +
stat_function(fun = function(x) + 0.25, geom = "line")
ggplot(data.frame(x= c(0,1)), aes(x = x)) +
stat_function(fun = x + 0.25, geom = "line")
ggplot(data.frame(x= c(0,1)), aes(x = x)) +
stat_function(fun = function(x) + 0.25, geom = "line")
ggplot(data.frame(x= c(0,1)), aes(x = x)) +
stat_function(fun = function(x), geom = "line")
ggplot(data.frame(x= c(0,1)), aes(x = x)) +
stat_function(fun = function(x), geom = "line")
ggplot(data.frame(x= c(0,1)), aes(x = x)) +
stat_function(fun = function(x) x + 0.25, geom = "line")
ggplot(data_4, aes(x = x)) +
geom_line(aes(y = fun1))
data_4 <- data.frame(x = c(0 : 100),
func1 = sapply(data_4$x, FUN = function(x){x+0.25}),
func2 = saaply(data_4$x, FUN - function(x){x-0.25}))
ggplot(data_4, aes(x = x)) +
geom_line(aes(y = fun1))
data_4 <- data.frame(x = c(0 : 100),
func1 = sapply(data_4$x, FUN = function(x){x+0.25}),
func2 = saaply(data_4$x, FUN - function(x){x-0.25}))
data_4 <- data.frame(x = c(0 : 100),
func1 = sapply(data_4$x, FUN = function(x){x+0.25}),
func2 = sapply(data_4$x, FUN - function(x){x-0.25}))
data_4 <- data.frame(x = c(0 : 100),
func1 = sapply(data_4$x, FUN = function(x){x+0.25}),
func2 = sapply(data_4$x, FUN = function(x){x-0.25}))
data_4 = data.frame(x = c(0 : 100),
func1 = sapply(data_4$x, FUN = function(x){x+0.25}),
func2 = sapply(data_4$x, FUN = function(x){x-0.25}))
data_4 = data.frame(x = c(0:100))
data_4 = data.frame(x = c(0 : 100),
func1 = sapply(data_4$x, FUN = function(x){x+0.25}),
func2 = sapply(data_4$x, FUN = function(x){x-0.25}))
ggplot(data_4, aes(x = x)) +
geom_line(aes(y = func1))
View(data_4)
ggplot(data_4, aes(x = x, 7 = func2)) +
ggplot(data_4, aes(x = x, y = func2)) +
geom_line(aes(y = func1))
ggplot(data_4, aes(x = x, y = func2)) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2))
data_4 = data.frame(x = c(0 : 100),
func1 = sapply(data_4$x, FUN = function(x){x+25}),
func2 = sapply(data_4$x, FUN = function(x){x-25}))
ggplot(data_4, aes(x = x, y = func2)) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2))
ggplot(data_4, aes(x = x, y = func2), xlim = c(0,100), ylim = c(0, 100)) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2))
ggplot(data_4, aes(x = x, y = func2)) +
xlim(0, 100) + ylim(0, 100) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2))
data_4 = data.frame(x = c(0:1))
data_4 = data.frame(x = c(0 : 1),
func1 = sapply(data_4$x, FUN = function(x){x+0.25}),
func2 = sapply(data_4$x, FUN = function(x){x-0.25}))
ggplot(data_4, aes(x = x, y = func2)) +
xlim(0, 100) + ylim(0, 100) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2))
ggplot(data_4, aes(x = x, y = func2)) +
xlim(0, 1) + ylim(0, 1) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2))
data_4 = data.frame(x = c(0:100))
data_4 <- data_4 / 100
data_4 = data.frame(x = c(0 : 1),
func1 = sapply(data_4$x, FUN = function(x){x+0.25}),
func2 = sapply(data_4$x, FUN = function(x){x-0.25}))
View(data_4)
data_4 = data.frame( func1 = sapply(data_4$x, FUN = function(x){x+0.25}),
func2 = sapply(data_4$x, FUN = function(x){x-0.25}))
View(data_4)
ggplot(data_4, aes(x = x, y = func2)) +
xlim(0, 1) + ylim(0, 1) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2))
data_4 = data.frame( x = c(0: 100) / 100,
func1 = sapply(data_4$x, FUN = function(x){x+0.25}),
func2 = sapply(data_4$x, FUN = function(x){x-0.25}))
data_4 = data.frame(x = c(0:100))
data_4 <- data_4 / 100
data_4 = data.frame( x = c(0: 100) / 100,
func1 = sapply(data_4$x, FUN = function(x){x+0.25}),
func2 = sapply(data_4$x, FUN = function(x){x-0.25}))
View(data_4)
ggplot(data_4, aes(x = x, y = func2)) +
xlim(0, 1) + ylim(0, 1) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2))
ggplot(data_4, aes(x = x, y = func2)) +
xlim(0, 1) + ylim(0, 1) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2)) +
geom_ribbon(aes(ymin = func2, ymax = fun1), fill = "grey")
ggplot(data_4, aes(x = x, y = func2)) +
xlim(0, 1) + ylim(0, 1) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2)) +
geom_ribbon(aes(ymin = func2, ymax = fun1), fill = "grey", alpha = .5)
ggplot(data_4, aes(x = x, y = func2)) +
xlim(0, 1) + ylim(0, 1) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2)) +
geom_ribbon(aes(ymin = func2, ymax = func1), fill = "grey", alpha = .5)
ggplot(data_4, aes(x = x, y = func2)) +
xlim(0, 1) + ylim(0, 1) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2)) +
geom_ribbon(aes(ymin = max(func2, 0), ymax = min(func1,1)), fill = "grey", alpha = .5)
data_4 = data.frame( x = c(-100: 100) / 100,
func1 = sapply(data_4$x, FUN = function(x){x+0.25}),
func2 = sapply(data_4$x, FUN = function(x){x-0.25}))
ggplot(data_4, aes(x = x, y = func2)) +
xlim(0, 1) + ylim(0, 1) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2)) +
geom_ribbon(aes(ymin = max(func2, 0), ymax = min(func1,1)), fill = "grey", alpha = .5)
ggplot(data_4, aes(x = x, y = func2)) +
xlim(-1, 1) + ylim(-1, 1) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2)) +
geom_ribbon(aes(ymin = max(func2, 0), ymax = min(func1,1)), fill = "grey", alpha = .5)
View(data_4)
data_4 = data.frame(x = c(-100:100))
data_4 = data.frame( x = c(-100: 100) / 100,
func1 = sapply(data_4$x, FUN = function(x){x+0.25}),
func2 = sapply(data_4$x, FUN = function(x){x-0.25}))
ggplot(data_4, aes(x = x, y = func2)) +
xlim(-1, 1) + ylim(-1, 1) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2)) +
geom_ribbon(aes(ymin = max(func2, 0), ymax = min(func1,1)), fill = "grey", alpha = .5)
View(data_4)
ggplot(data_4, aes(x = x, y = func2)) +
xlim(-1, 1) + ylim(-1, 1) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2)) +
geom_ribbon(aes(ymin = max(func2, 0), ymax = min(func1,1)), fill = "grey", alpha = .5)
ggplot(data_4, aes(x = x, y = func2)) +
xlim(-1, 1) + ylim(-1, 1) +
geom_line(aes(y = func1)) +
geom_line(aes(y = func2))
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
xlim(-1,1) + ylim(-1,1) +
theme_classic()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
xlim(-1,1) + ylim(-1,1) +
theme_bw()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green", xlim = (-1, 1)) +
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green", xlim = (-1， 1)) +
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green", xlim = c(-1, 1)) +
geom_abline(intercept = -0.25, colour = "green") +
xlim(-1,1) + ylim(-1,1) +
theme_bw()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
xlim(-1,1) + ylim(-1,1) +
theme_bw()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
xlim(-1,1) + ylim(-1,1) +
scale_x_continuous(limits = c(-1, 1)) +
theme_bw()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
scale_x_continuous(limits = c(-1, 1)) +
theme_bw()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline(colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
theme_bw()
c(-100: 100) / 100
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline( slope = 1,colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
theme_bw()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline( slope = 0,colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
theme_bw()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline( intercept = -1,slope = 0,colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
theme_bw()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_abline( intercept = -1, slope = 0,colour = "blue")+
geom_abline( intercept = -1, slope = ifn,colour = "blue")+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
theme_bw()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
gg_hline(yintercept = -1)+
gg_hline(yintercept = 1)+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
theme_bw()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_hline(yintercept = -1)+
geom_hline(yintercept = 1)+
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
theme_bw()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_hline(yintercept = -1)+
geom_hline(yintercept = 1)+
geom_vline(xintercept = 1)+
geom_vline(xintercept = -2)
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_hline(yintercept = -1)+
geom_hline(yintercept = 1)+
geom_vline(xintercept = 1)+
geom_vline(xintercept = -1)
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
theme_bw()
ggplot(mapping = aes(hmm, ll), height = 1, width = 1)+
geom_hline(yintercept = -1)+
geom_hline(yintercept = 1)+
geom_vline(xintercept = 1)+
geom_vline(xintercept = -1) +
geom_abline(intercept = 0.25, colour = "green") +
geom_abline(intercept = -0.25, colour = "green") +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
theme_bw()
sustech <- c("S", "U", "T", "E", "C", "H")
science <- c("S", "C", "I", "E", "N", "C", "E")
sustech <- data.frame(c("S", "U", "T", "E", "C", "H"))
science <- data.frame(c("S", "C", "I", "E", "N", "C", "E"))
View(science)
View(sustech)
View(science)
?data.frame
sustech
colnames(sustech) <- "letters"
colnames(science) <- "letters"
sustech
science
data_5 <- full_join(sustech, science)
data_5
data_5 <- expand.grid(sustech = sustech, science = science)
data_5
data_5
as.data.frame(data_5)
data_5
sustech <- c("S", "U", "T", "E", "C", "H")
science <- c("S", "C", "I", "E", "N", "C", "E")
```{r}
sustech <- c("S", "U", "T", "E", "C", "H")
science <- c("S", "C", "I", "E", "N", "C", "E")
# colnames(sustech) <- "letters"
# colnames(science) <- "letters"
data_5 <- expand.grid(sustech = sustech, science = science)
data_5
t(data_5)
data_5
data_5$sample_space <- paste("(",data_5$sustech,",",data_5$science, ")")
View(data_5)
data_5$sample_space
t(data_5$sample_space)
as.data.frame(t(data_5$sample_space))
temp <- c("L", "M", "H", "U")
med <- c(0,1)
ss <- expand.grid(temp, med)
head(data_5)
ss
colname(ss) <- c('temperature', 'medical_ins')
colnames(ss) <- c('temperature', 'medical_ins')
View(ss)
t(ss)
ss$sample <- paste(ss$temperature, ", ", ss$medical_ins)
ss$sample
t(ss$sample)
ss$sample <- paste(ss$temperature, ",", ss$medical_ins)
t(ss$sample)
ss$sample <- paste("(",ss$temperature, ",", ss$medical_ins, ")")
t(ss$sample)
ss$sample)
ss$sample
View(ss)
ss[,3]
ss$sample
ss[ss$temperature == "H" | ss$temperature = "U"]
ss[ss$temperature == "H" | ss$temperature == "U"]
ss[,ss$temperature == "H" | ss$temperature == "U"]
ss[ss$temperature == "H" | ss$temperature == "U"]
ss[ss$temperature == "H" ]
ss[ss$temperature == "H"]
ss[ss$temperature == "H",]
ss[ss$temperature == "H" | ss$temperature == "U",]
ss[ss$medical_ins == 0,]
```{r}
ss[ss$medical_ins = 1 | ss$temperature == "H" | ss$temperature == "U",]
ss[ss$medical_ins == 1 | ss$temperature == "H" | ss$temperature == "U",]
a <- c(1,5,9)
b <- c(3,4,8)
c <- c(2,6,7)
b_results <- expand.grid(a,b)
b_results
b_results$win <- b_results$Var2 > b_results$Var1
b_results
b_results
c_results <- expand.grid(a,c)
c_results$win <- c_results$Var2 > c_results$Var1
c_results
rings <- data.frame(c(1:10))
View(rings)
rings <- data.frame(c(1:10)/10)
colnames(rings) <- "diameter"
View(rings)
rings$size <- rings$diameter^2 * pi
rings$cum_size <- rings$diameter^2 * pi
rings$size <- rings$size
rings$size <- rings$cum_size
for(i in 2: 10){
rings$size[i] = rings$size[i] - rings$cum_size[i-1]
}
rings$ring <- t(c(1:10))
rings$ring <- c(10:1)
rings[, c("cum_size", "ring")]
rings[, c("size", "ring")]
rings[, c("size", "ring")]
---
title: "Biostatistics Homework 1"
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
circleFun
circleFun()
circle <-
circleFun()
circle <- circleFun()
ggplot(circle, mapping = aes(x, y))+
geom_point()
```{r, fig.width=10, fic.height=10}
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
circle <- circleFun()
ggplot(circle, mapping = aes(x, y))+
geom_point()
```{r, fig.width=10, fig.height=10}
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
ggplot(circle, mapping = aes(x, y))+
geom_point()
ggplot(circle, mapping = aes(x, y))+
geom_point()
ggplot(circle, mapping = aes(x, y))+
geom_line()
ggplot(circle, mapping = aes(x, y))+
geom_path()
```{r, fig.width=5, fig.height=5}
ggplot(circle, mapping = aes(x, y))+
geom_path()
```{r, fig.width=2, fig.height=2}
ggplot(circle, mapping = aes(x, y))+
geom_path()
circle <- circleFun(diameter = 2)
ggplot(circle, mapping = aes(x, y))+
geom_path()
rings$ring
rings$probability <- rings$size / pi
sum(rings$ring * rings$probability)
ggplot(circle, mapping = aes(x, y))+
geom_path()+
geom_ribbon(aes(ymin = circle, ymax = circle))
ggplot(circle, mapping = aes(x, y))+
geom_path()+
geom_ribbon(aes(ymin = y, ymax = y))
